name: Build Typescript
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Build and test
        uses: linz/action-typescript@v3

      - name: (Prod) Setup git config
        if: github.ref == 'refs/heads/master' && startsWith(github.event.head_commit.message, 'release:')
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: (Prod) Create tag
        if: github.ref == 'refs/heads/master' && startsWith(github.event.head_commit.message, 'release:')
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          git tag v${CURRENT_VERSION} -m v${CURRENT_VERSION} || true
          git push --tags

      - name: (Prod) Create github release
        if: github.ref == 'refs/heads/master' && startsWith(github.event.head_commit.message, 'release:')
        run: npx conventional-github-releaser -p angular
        env:
          CONVENTIONAL_GITHUB_RELEASER_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: (NonProd) Configure AWS Credentials
        if: github.ref == 'refs/heads/master'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: 'ap-southeast-2'
          role-to-assume: ${{ secrets.AWS_ROLE_NON_PROD }}

      - name: (NonProd) Deploy to NonProd
        if: github.ref == 'refs/heads/master'
        run: |
          npx cdk deploy --all -y --require-approval never
        env:
          AWS_ORG_ID: ${{secrets.AWS_ORG_ID}}

      - name: (Prod) Configure AWS Credentials
        if: github.ref == 'refs/heads/master' && startsWith(github.event.head_commit.message, 'release:')
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: 'ap-southeast-2'
          role-to-assume: ${{ secrets.AWS_ROLE_PROD }}

      - name: (Prod) Deploy to Prod
        if: github.ref == 'refs/heads/master' && startsWith(github.event.head_commit.message, 'release:')
        run: |
          npx cdk deploy --all -y --require-approval never
        env:
          AWS_ORG_ID: ${{secrets.AWS_ORG_ID}}
